services:
  product-composite:
    build:
      context: microservices/product-composite-service
    image: ecet/my-project-product-composite
    mem_limit: 512m
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - product
      - product-p1
      - recommendation
      - recommendation-p1
      - review
      - review-p1
      - kafka

  product:
    build:
      context: microservices/product-service
    image: ecet/my-project-product
    mem_limit: 512m
    environment:
      - SPRING_PROFILES_ACTIVE=docker,streaming_instance_0
    depends_on:
      mongodb:
        condition: service_healthy
      kafka:
        condition: service_started
      eureka:
        condition: service_started
  product-p1:
    build:
      context: microservices/product-service
    image: ecet/my-project-product
    mem_limit: 512m
    environment:
      - SPRING_PROFILES_ACTIVE=docker,streaming_instance_1
    depends_on:
      mongodb:
        condition: service_healthy
      kafka:
        condition: service_started
      eureka:
        condition: service_started

  recommendation:
    build:
      context: microservices/recommendation-service
    image: ecet/my-project-recommendation
    mem_limit: 512m
    environment:
      - SPRING_PROFILES_ACTIVE=docker,streaming_instance_0
    depends_on:
      mongodb:
        condition: service_healthy
      kafka:
        condition: service_started
      eureka:
        condition: service_started
  recommendation-p1:
    build:
      context: microservices/recommendation-service
    image: ecet/my-project-recommendation
    mem_limit: 512m
    environment:
      - SPRING_PROFILES_ACTIVE=docker,streaming_instance_1
    depends_on:
      mongodb:
        condition: service_healthy
      kafka:
        condition: service_started
      eureka:
        condition: service_started

  review:
    build:
      context: microservices/review-service
    image: ecet/my-project-review
    mem_limit: 512m
    environment:
      - SPRING_PROFILES_ACTIVE=docker,streaming_instance_0
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_started
      eureka:
        condition: service_started
  review-p1:
    build:
      context: microservices/review-service
    image: ecet/my-project-review
    mem_limit: 512m
    environment:
      - SPRING_PROFILES_ACTIVE=docker,streaming_instance_1
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_started
      eureka:
        condition: service_started

  mongodb:
    image: mongo:8.0.3
    mem_limit: 512m
    ports:
      - "27017:27017"
    command: mongod
    healthcheck:
      test: "mongostat -n 1"
      interval: 5s
      timeout: 2s
      retries: 60

  postgres:
    image: postgres:16.3
    mem_limit: 512m
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=review-db
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=pwd
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 5s
      timeout: 2s
      retries: 60

  kafka:
    image: confluentinc/cp-kafka:7.7.2
    restart: always
    mem_limit: 1024m
    ports:
      - "9092:9092"
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_BROKER_ID=1
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    depends_on:
      - zookeeper

  zookeeper:
    image: confluentinc/cp-zookeeper:7.7.2
    restart: always
    mem_limit: 512m
    ports:
      - "2181:2181"
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181

  eureka:
    build:
      context: springcloud/eurekaserver
    image: ecet/my-project-eureka-server
    mem_limit: 512m
    ports:
      - "8761:8761"
