spring:
  application:
    name: recommendation-service
  data:
    mongodb:
      host: localhost
      port: 27017
      database: recommendation-db
  kafka:
    bootstrap-servers: 127.0.0.1:9092
  cloud:
    function:
      definition: messageProcessor
    stream:
      default:
        contentType: application/json
      bindings:
        messageProcessor-in-0:
          destination: recommendations
          group: recommendationGroup
          consumer:
            maxAttempts: 3
            backOffInitialInterval: 500
            backOffMaxInterval: 1000
            backOffMultiplier: 2.0
            partitioned: true
            instanceCount: 2
      kafka:
        binder:
          brokers: 127.0.0.1
          defaultBrokerPort: 9092
          replication-factor: 1
          autoCreateTopics: true
        bindings:
          messageProcessor-in-0:
            consumer:
              enableDlq: true

management:
  endpoint:
    health:
      show-details: "ALWAYS"
  endpoints:
    web:
      exposure:
        include: "health,info"

server:
  port: 7002
  error:
    include-message: always

logging:
  level:
    root: INFO
    com.example.microservices: DEBUG
    org.springframework.data.mongodb.core.MongoTemplate: DEBUG

---
spring:
  config:
    activate:
      on-profile: docker
  data:
    mongodb:
          host: mongodb
  kafka:
    bootstrap-servers: kafka:9092
  cloud:
    stream:
      kafka:
        binder:
          brokers: kafka

server:
  port: 8080

---
spring:
  config:
    activate:
      on-profile: streaming_instance_0
  cloud:
    stream:
      bindings:
        messageProcessor-in-0:
          consumer:
            instanceIndex: 0

---
spring:
  config:
    activate:
      on-profile: streaming_instance_1
  cloud:
    stream:
      bindings:
        messageProcessor-in-0:
          consumer:
            instanceIndex: 1

